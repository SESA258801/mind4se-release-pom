<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.se.mind</groupId>
	<artifactId>mind4se-compiler</artifactId>
	<version>0.1-SNAPSHOT</version>
	<name>MIND4SE compiler</name>
	<packaging>pom</packaging>

	<description>
      MIND4SE compiler is the tool-set that support the development of 
      component-based software written with the Mind programming model 
      for Schneider Electric purposes.
	</description>

	<ciManagement>
		<system>jenkins</system>
		<url>http://qfrwjen1.eur.gad.schneider-electric.com:8180/jenkins</url>
	</ciManagement>

	<properties>
		<modules.common.groupid>org.ow2.mind</modules.common.groupid>
		<modules.common.version>2.1-SNAPSHOT</modules.common.version>
		<modules.cpp.version>0.1.1-SNAPSHOT</modules.cpp.version>
		<module.diff.version>0.1.0-SNAPSHOT</module.diff.version>

		<maven.build.timestamp.format>yyyyMMddHHmm</maven.build.timestamp.format>
		<release.buildNumber>${maven.build.timestamp}</release.buildNumber>
	</properties>

	<modules>
		<module>mind-compiler</module>
		<module>Optimization-Backend</module>
		<module>global-extensions/ext-parser</module>
		<module>global-extensions/global-extensions</module>
		<module>dumpdot-annotation</module>
		<module>mindot-viewer</module>
		<module>mindunit/mindunit-runtime</module>
		<module>mindunit/mindunit</module>
		<module>iar-extension</module>
		<module>garbage-composite-annotation</module>
		<module>mindoc</module>
		<module>mind-cpp</module>
		<module>generic-compiler-extension</module>
		<module>generic-compiler-executor</module>
		<module>dependency-tools</module>
		<module>examples</module>
		<module>mind-visual-diff</module>
	</modules>

	<dependencies>
		<dependency>
			<groupId>${modules.common.groupid}</groupId>
			<artifactId>mindc</artifactId>
			<version>${modules.common.version}</version>
			<classifier>bin</classifier>
			<type>zip</type>
		</dependency>

		<dependency>
			<groupId>${modules.common.groupid}</groupId>
			<artifactId>ext-parser</artifactId>
			<version>${modules.common.version}</version>
			<type>jar</type>
		</dependency>

		<dependency>
			<groupId>${modules.common.groupid}</groupId>
			<artifactId>global-extensions</artifactId>
			<version>${modules.common.version}</version>
			<type>jar</type>
		</dependency>

		<dependency>
			<groupId>${modules.common.groupid}</groupId>
			<artifactId>dumpdot-annotation</artifactId>
			<version>${modules.common.version}</version>
			<classifier>bin</classifier>
			<type>zip</type>
		</dependency>

		<dependency>
			<groupId>${modules.common.groupid}</groupId>
			<artifactId>mindot-viewer</artifactId>
			<version>${modules.common.version}</version>
			<classifier>bin</classifier>
			<type>zip</type>
		</dependency>

		<dependency>
			<groupId>${modules.common.groupid}</groupId>
			<artifactId>mindunit</artifactId>
			<version>${modules.common.version}</version>
			<classifier>bin</classifier>
			<type>zip</type>
		</dependency>

		<dependency>
			<groupId>${modules.common.groupid}</groupId>
			<artifactId>iar-extension</artifactId>
			<version>${modules.common.version}</version>
			<type>jar</type>
		</dependency>

		<dependency>
			<groupId>${modules.common.groupid}</groupId>
			<artifactId>garbage-composite-annotation</artifactId>
			<version>${modules.common.version}</version>
			<type>jar</type>
		</dependency>

		<dependency>
			<groupId>${modules.common.groupid}</groupId>
			<artifactId>mindoc</artifactId>
			<version>${modules.common.version}</version>
			<classifier>bin</classifier>
			<type>zip</type>
		</dependency>

		<dependency>
			<groupId>${modules.common.groupid}</groupId>
			<artifactId>mindcpp</artifactId>
			<version>${modules.cpp.version}</version>
			<classifier>bin</classifier>
			<type>zip</type>
		</dependency>

		<dependency>
			<groupId>${modules.common.groupid}</groupId>
			<artifactId>mindc-optimizations</artifactId>
			<version>${modules.common.version}</version>
			<classifier>bin</classifier>
			<type>zip</type>
		</dependency>

		<dependency>
			<groupId>${modules.common.groupid}</groupId>
			<artifactId>generic-compiler-executor</artifactId>
			<version>${modules.common.version}</version>
			<classifier>bin</classifier>
			<type>zip</type>
		</dependency>

		<dependency>
			<groupId>${modules.common.groupid}</groupId>
			<artifactId>dependency-tools</artifactId>
			<version>${modules.common.version}</version>
			<classifier>bin</classifier>
			<type>zip</type>
		</dependency>

		<dependency>
			<groupId>${modules.common.groupid}</groupId>
			<artifactId>generic-compiler-extension</artifactId>
			<version>${modules.common.version}</version>
			<type>jar</type>
		</dependency>
		
		<dependency>
			<groupId>${modules.common.groupid}</groupId>
			<artifactId>examples</artifactId>
			<version>${modules.common.version}</version>
			<classifier>bin</classifier>
			<type>zip</type>
		</dependency>
		
		<dependency>
			<groupId>${modules.common.groupid}</groupId>
			<artifactId>mind-visual-diff</artifactId>
			<version>${module.diff.version}</version>
			<classifier>bin</classifier>
			<type>zip</type>
		</dependency>

	</dependencies>

	<build>

		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.8</version>
				<executions>
					<execution>
						<id>unpack-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<excludeTransitive>true</excludeTransitive>
							<includeClassifiers>bin</includeClassifiers>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<!-- Generates binary assemblies at package phase. -->
					<execution>
						<id>bin-packages</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>src/assemble/bin-release.xml</descriptor>
							</descriptors>
							<finalName>${project.build.finalName}-${release.buildNumber}</finalName>
							<appendAssemblyId>true</appendAssemblyId>
						</configuration>
					</execution>

					<!-- Generates directory assembly for integration test -->
					<execution>
						<id>bin-integration</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>src/assemble/bin-integration.xml</descriptor>
							</descriptors>
							<appendAssemblyId>false</appendAssemblyId>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>

				<executions>
					<execution>
						<id>test-makefile-assembly</id>
						<phase>integration-test</phase>
						<configuration>
							<executable>make</executable>
							<workingDirectory>
								${project.build.directory}/${project.build.finalName}/${project.build.finalName}/examples
							</workingDirectory>
							<arguments>
								<argument>MIND_ROOT=${project.build.directory}/${project.build.finalName}/${project.build.finalName}</argument>
								<argument>clean</argument>
								<argument>all</argument>
							</arguments>
						</configuration>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
					
					<execution>
						<id>test-makefile-assembly-doc</id>
						<phase>integration-test</phase>
						<configuration>
							<executable>make</executable>
							<workingDirectory>
								${project.build.directory}/${project.build.finalName}/${project.build.finalName}/examples/doc
							</workingDirectory>
							<arguments>
								<argument>MIND_ROOT=${project.build.directory}/${project.build.finalName}/${project.build.finalName}</argument>
								<argument>check_doc</argument>
							</arguments>
						</configuration>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- User documentation generation -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<inherited>false</inherited>
				<executions>
					<execution>
						<id>copy-docbook-resources</id>
						<!-- here the phase you need -->
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<inherited>false</inherited>
						<configuration>
							<outputDirectory>${project.build.directory}/site/images</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/src/docbkx/images</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.agilejava.docbkx</groupId>
				<artifactId>docbkx-maven-plugin</artifactId>
				<inherited>false</inherited>
				<executions>
					<!-- User Guide PDF execution -->
					<execution>
						<id>pdf</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>generate-pdf</goal>
						</goals>
						<inherited>false</inherited>
						<configuration>
							<targetDirectory>${project.build.directory}/site</targetDirectory>
							<foCustomization>${basedir}/src/docbkx/xsl/minddoc-fo.xsl</foCustomization>
							<draftWatermarkImage>${basedir}/src/docbkx/images/draft.png</draftWatermarkImage>
						</configuration>
					</execution>
					<!-- User Guide HTML executions -->
					<execution>
						<id>html-printable</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>generate-html</goal>
						</goals>
						<inherited>false</inherited>
						<configuration>
							<targetDirectory>${project.build.directory}/site/printable</targetDirectory>
							<imgSrcPath>../</imgSrcPath>
							<htmlCustomization>${basedir}/src/docbkx/xsl/minddoc-html-printable.xsl</htmlCustomization>
							<htmlStylesheet>../css/docbook-printable.css</htmlStylesheet>
						</configuration>
					</execution>
					<execution>
						<id>userguide-html</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>generate-html</goal>
						</goals>
						<inherited>false</inherited>
						<configuration>
						<includes>Mind-and-plugins-User-guide.xml</includes>
						<targetDirectory>${project.build.directory}/site</targetDirectory>
						<htmlCustomization>${basedir}/src/docbkx/xsl/minddoc-html.xsl</htmlCustomization>
						<htmlStylesheet>css/docbook.css</htmlStylesheet>
						<customizationParameters>
							<parameter>
								<name>root.path</name>
								<value>.</value>
							</parameter>
							<parameter>
							<name>pdf.link</name>
                                    <value>Mind-and-plugins-User-guide.pdf</value>
                                </parameter>
                                <parameter>
                                    <name>chunked.link</name>
                                    <value>userGuide/Mind-and-plugins-User-guide.html</value>
                                </parameter>
                                <parameter>
                                    <name>printable.link</name>
                                    <value>printable/Mind-and-plugins-User-guide.html</value>
                                </parameter>
                            </customizationParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>userguide-html-chunked</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>generate-html</goal>
                        </goals>
                        <inherited>false</inherited>
                        <configuration>
                            <includes>Mind-and-plugins-User-guide.xml</includes>
                            <chunkedOutput>true</chunkedOutput>
                            <targetDirectory>${project.build.directory}/site/userGuide</targetDirectory>
                            <imgSrcPath>../</imgSrcPath>
                            <htmlCustomization>${basedir}/src/docbkx/xsl/minddoc-chunk.xsl</htmlCustomization>
                            <htmlStylesheet>../css/docbook-chunk.css</htmlStylesheet>
                            <customizationParameters>
                                <parameter>
                                    <name>root.path</name>
                                    <value>..</value>
                                </parameter>
                                <parameter>
                                    <name>pdf.link</name>
                                    <value>../Mind-and-plugins-User-guide.pdf</value>
                                </parameter>
                                <parameter>
                                    <name>single.link</name>
                                    <value>../Mind-and-plugins-User-guide.html</value>
                                </parameter>
                                <parameter>
                                    <name>printable.link</name>
                                    <value>../printable/Mind-and-plugins-User-guide.html</value>
                                </parameter>
                            </customizationParameters>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <targetDirectory>${project.build.directory}/site</targetDirectory>
                    <xslthlConfig>${basedir}/src/docbkx/xsl/xslthl-config.xml</xslthlConfig>
                    <highlightSource>1</highlightSource>
                    <xincludeSupported>true</xincludeSupported>
                </configuration>
            </plugin>

		</plugins>

	</build>

	<profiles>

		<profile>
			<id>deploy-teamforge</id>
			<activation>
				<property>
					<name>teamforge</name>
				</property>			
			</activation>

			<properties>
				<!-- Can be overridden by parameter. Accepted values are (case-sensitive):
				- Development Build
				- Alpha
				- Beta
				- Stable
				-->
				<teamforge.release.maturity>Development Build</teamforge.release.maturity>
			</properties>

			<pluginRepositories>
				<pluginRepository>
					<id>maestro-rel</id>
					<name>Maestro releases</name>
					<url>https://repo.maestrodev.com/archiva/repository/public</url>
				</pluginRepository>
			</pluginRepositories>

			<build>

				<pluginManagement>
					<plugins>
						<plugin>
							<artifactId>maven-deploy-plugin</artifactId>
							<configuration>
								<skip>true</skip>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>

				<plugins>
					<plugin>
						<groupId>com.maestrodev</groupId>
						<artifactId>collabnet-maven-plugin</artifactId>
						<version>1.4</version>
						<configuration>
							<project>mind4se</project>
							<teamForgeUrl>https://teamforge.schneider-electric.com</teamForgeUrl>
							<teamForgeServerId>teamforge</teamForgeServerId>
							<createRelease>true</createRelease>
							<pkg>test-mind4se</pkg>
							<packageDescription>${project.description}</packageDescription>
							<release>${project.build.finalName}</release>
							<releaseMaturity>${teamforge.release.maturity}</releaseMaturity>
							<releaseStatus>active</releaseStatus>
						</configuration>
						<executions>
							<execution>
								<id>collabnet-deploy</id>
								<phase>deploy</phase>
								<goals>
									<goal>deploy-to-releases</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

				</plugins>

			</build>

		</profile>

		<profile>
			<!-- Profile deploy-teamforge must be also activated -->
			<id>official-teamforge-release</id>

			<properties>
				<teamforge.release.maturity>Alpha</teamforge.release.maturity>
			</properties>

			<build>
				<plugins>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<configuration>
							<finalName>${project.build.finalName}-${release.buildNumber}-${teamforge.release.maturity}</finalName>
							<appendAssemblyId>true</appendAssemblyId>
						</configuration>
					</plugin>

					<plugin>
						<groupId>com.maestrodev</groupId>
						<artifactId>collabnet-maven-plugin</artifactId>
						<configuration>
							<release>${project.build.finalName}-${release.buildNumber}-${teamforge.release.maturity}</release>
							<releaseDescription>${project.version} ${teamforge.release.maturity} version of MIND4SE compiler.${line.separator}Generated on ${release.buildNumber}.</releaseDescription>
							<releaseMaturity>${teamforge.release.maturity}</releaseMaturity>
							<releaseStatus>active</releaseStatus>
						</configuration>
					</plugin>

				</plugins>
			</build>

		</profile>

		<profile>
			<id>deploy-artifactory</id>
			<activation>
				<property>
					<name>artifactory</name>
				</property>
			</activation>

			<distributionManagement>
				<repository>
					<uniqueVersion>true</uniqueVersion>
					<id>artifactory</id>
					<name>Artifactory repository</name>
					<url>http://qfrwjen1.eur.gad.schneider-electric.com:8180/artifactory/libs-release-local</url>
					<layout>default</layout>
				</repository>
				<snapshotRepository>
					<uniqueVersion>false</uniqueVersion>
					<id>artifactory</id>
					<name>Artifactory repository</name>
					<url>http://qfrwjen1.eur.gad.schneider-electric.com:8180/artifactory/libs-snapshot-local</url>
					<layout>default</layout>
				</snapshotRepository>
			</distributionManagement>

			<build>

				<pluginManagement>
					<plugins>
						<plugin>
							<artifactId>maven-deploy-plugin</artifactId>
							<configuration>
								<skip>false</skip>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>

			</build>

		</profile>

	</profiles>

</project>
